name: release-n-deploy

on:
  push:
    branches: [dev/release-action]
  #push:
  #  tags:
  #    - "v*.*" # Trigger on push with tags matching v*, i.e. v1.0, v0.1.5

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Generate draft release notes by taking the commit logs between  this release and the previous
      - name: Generate draft release notes
        id: gen_release_notes
        run: |
          # Get commit log
          notes=$(git log --pretty=format:' -%d%Creset %s' --abbrev-commit)
          # Get the commit log between the two most recent tags/releases
          notes=$(echo "$notes" | awk '/tag: v/ { flag=!flag; count+=1; next } flag && count < 2 {print}')
          # Remove the merge commits
          notes=$(echo "$notes" | sed  '/Merge pull request #/d')
          echo "::set-output name=notes::$notes"

      - name: Create Release
        uses: softprops/action-gh-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            Changes in this Release:
            ${{ steps.gen_release_notes.outputs.notes }}
          draft: true
          prerelease: false
#  deploy:
#    name: Deploy to PyPI
#    runs-on: ubuntu-latest#
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: "3.x"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install setuptools wheel twine
#      - name: Build and publish
#        env:
#          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#        run: |
#          python setup.py sdist bdist_wheel
#          twine upload dist/*
